- case: dataset_type_promotion
  parametrized:
    # Test that vtk type is not a subtype of pyvista type
    - plugin: ''
      required_type: DataSet
      object_type: vtkDataSet
      output: 'main:5: error: Argument 1 to "foo" has incompatible type "vtkDataSet"; expected "DataSet"  [arg-type]'

    # Same as above, but use the plugin.
    - plugin: pyvista_mypy_plugin
      required_type: DataSet
      object_type: vtkDataSet
      output: 'main:5: error: Argument 1 to "foo" has incompatible type "vtkDataSet"; expected "DataSet"  [arg-type]'

    # Without the plugin, pyvista type is not a subtype of vtk type
    - plugin: ''
      required_type: vtkDataSet
      object_type: DataSet
      output: 'main:5: error: Argument 1 to "foo" has incompatible type "DataSet"; expected "vtkDataSet"  [arg-type]'

    # With the plugin, pyvista type is considered a subtype of vtk type
    - plugin: pyvista_mypy_plugin
      required_type: vtkDataSet
      object_type: DataSet
      output: ''

    # Check pyvista type works with parent of vtk type
    - plugin: pyvista_mypy_plugin
      required_type: vtkDataObject
      object_type: DataSet
      output: ''

  mypy_config: |
    plugins = {{ plugin }}
    no_incremental = True
  main: |
    from pyvista import DataSet
    from vtkmodules.vtkCommonDataModel import vtkDataSet, vtkDataObject
    def foo(x: {{ required_type }}): ...
    y: {{ object_type }}
    foo(y)
  out: |
    {{ output }}
